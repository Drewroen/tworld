
  Installing Tile World for Linux

Before proceeding, ensure that you have SDL installed on your machine. (If
you don't have SDL, you can get it by visiting
http://www.libsdl.org/download.html. If you download a precompiled version
-- i.e., an .rpm or .deb file -- note that you will need the development
runtime, as opposed to the binary runtime.)

Installing Tile World involves the usual three-part incantation:

  ./configure

By default, the program is set up so that it will keep its shared files in
/usr/local/share/tworld. If you would prefer the tworld directory to be
somewhere besides /usr/local/share, use the --datadir option to change it
when you run ./configure. Alternately, you can use the --with-sharedir=DIR
option to explicitly specify a completely different path. (This value can
also be changed at runtime, either via the TWORLDDIR environment variable
or via the command line.)

  make

There shouldn't be any serious warnings from the compiler. Use "make
mklynxcc" if you want to also build a copy of mklynxcc (see below).

  make install

Running "make install" as root will do the following:

* Copy the tworld binary to /usr/local/games.
* Create /usr/local/share/tworld if it does not exist. (Or whatever
  directory you specified to ./configure.)
* Copy the external resources (i.e., the bitmaps and wave files) to
  /usr/local/share/tworld.
* Create the directories /usr/local/share/tworld/data and
  /usr/local/share/tworld/sets.

The sets directory is where you will store the .dat files that you want to
use. However, if you want to make use of a configuration file with a
particular data file, then you will need to store the data file in the data
directory, and the configuration file goes into the sets directory instead.
(Documentation for the configuration file feature is not quite yet written,
so you will probably just want to store your data files in the sets
directory for now.)

  mklynxcc

A very simple command-line utility is included, called mklynxcc. This
program will change a normal .dat file to one that will use the Lynx
ruleset when played. By making a copy of a .dat file and running this
utility on the copy, you can see how the levels work (or don't work) with
the Lynx ruleset.

However, the main purpose of this utility is to create a Lynx version of
the original chips.dat, so you can play the original version of the game.
When you run this utility on your chips.dat file (or rather, on a separate
copy of your chips.dat file), include the -x option. This will have the
added effect on the .dat file of restoring the wall on level 88 (SPIRALS)
that MS removed, assuming your chips.dat is one of those with a removed
wall. (It will also fix the four passwords that were changed from the
original Lynx codes -- levels 7, 10, 28, and 96.) The resulting .dat file
will thus provide a more accurate emulation of the original game. (Though
not perfect -- to be perfect it should remove level 145 and replace it with
a fractal generator.)
